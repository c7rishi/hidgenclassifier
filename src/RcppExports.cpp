// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Cpp_calc_minfo
NumericVector Cpp_calc_minfo(NumericMatrix prob_mat, NumericVector wt_vec, int normalized);
RcppExport SEXP _hidgenclassifier_Cpp_calc_minfo(SEXP prob_matSEXP, SEXP wt_vecSEXP, SEXP normalizedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type prob_mat(prob_matSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type wt_vec(wt_vecSEXP);
    Rcpp::traits::input_parameter< int >::type normalized(normalizedSEXP);
    rcpp_result_gen = Rcpp::wrap(Cpp_calc_minfo(prob_mat, wt_vec, normalized));
    return rcpp_result_gen;
END_RCPP
}
// calc_dist_pair
double calc_dist_pair(NumericVector P, NumericVector Q, String dist_type, double alpha);
RcppExport SEXP _hidgenclassifier_calc_dist_pair(SEXP PSEXP, SEXP QSEXP, SEXP dist_typeSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type P(PSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Q(QSEXP);
    Rcpp::traits::input_parameter< String >::type dist_type(dist_typeSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_dist_pair(P, Q, dist_type, alpha));
    return rcpp_result_gen;
END_RCPP
}
// calc_dist_refvec_targetmat
NumericVector calc_dist_refvec_targetmat(NumericVector P, NumericMatrix Qmat, String dist_type, double alpha);
RcppExport SEXP _hidgenclassifier_calc_dist_refvec_targetmat(SEXP PSEXP, SEXP QmatSEXP, SEXP dist_typeSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type P(PSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Qmat(QmatSEXP);
    Rcpp::traits::input_parameter< String >::type dist_type(dist_typeSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_dist_refvec_targetmat(P, Qmat, dist_type, alpha));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hidgenclassifier_Cpp_calc_minfo", (DL_FUNC) &_hidgenclassifier_Cpp_calc_minfo, 3},
    {"_hidgenclassifier_calc_dist_pair", (DL_FUNC) &_hidgenclassifier_calc_dist_pair, 4},
    {"_hidgenclassifier_calc_dist_refvec_targetmat", (DL_FUNC) &_hidgenclassifier_calc_dist_refvec_targetmat, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_hidgenclassifier(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
